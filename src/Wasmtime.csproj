<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;net6.0</TargetFrameworks>
    <LangVersion>10</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>enable</Nullable>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyName>Wasmtime.Dotnet</AssemblyName>
    <PackageId>Wasmtime</PackageId>
    <Version>$(WasmtimePackageVersion)</Version>
    <Authors>Peter Huene</Authors>
    <Owners>Peter Huene</Owners>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <RepositoryUrl>https://github.com/bytecodealliance/wasmtime-dotnet</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <PackageReleaseNotes>Update Wasmtime to 2.0.1.</PackageReleaseNotes>
    <Summary>A .NET API for Wasmtime, a standalone WebAssembly runtime</Summary>
    <PackageTags>webassembly, .net, wasm, wasmtime</PackageTags>
    <Title>Wasmtime</Title>
    <PackageDescription>
A .NET embedding of Wasmtime.

Wasmtime is a standalone runtime for WebAssembly, using the Cranelift JIT compiler.

The .NET embedding of Wasmtime enables .NET code to instantiate WebAssembly modules and to interact with them in-process.
    </PackageDescription>
    <PackageLicenseExpression>Apache-2.0 WITH LLVM-exception</PackageLicenseExpression>
    <EnablePackageValidation>true</EnablePackageValidation>
    <ContinuousIntegrationBuild Condition="'$(DevBuild)'=='false'">true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>
  
  <ItemGroup>
    <None Update="Linker.DefineFunction.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Linker.DefineFunction.cs</LastGenOutput>
    </None>
    <Compile Update="Linker.DefineFunction.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Linker.DefineFunction.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="Function.FromCallback.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>Function.FromCallback.cs</LastGenOutput>
    </None>
    <Compile Update="Function.FromCallback.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Function.FromCallback.tt</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <Target Name="RunCodeTemplates" BeforeTargets="DispatchToInnerBuilds">
    <!-- Generate the code files from the T4 text templates.
         We use the "DispatchToInnerBuilds" target so that they are only run once when
         building the project, instead of for each target framework. -->
    <Exec Command="dotnet tool restore" />
    <Exec Command="dotnet tool run t4 Linker.DefineFunction.tt" />
    <Exec Command="dotnet tool run t4 Function.FromCallback.tt" />
  </Target>
</Project>
